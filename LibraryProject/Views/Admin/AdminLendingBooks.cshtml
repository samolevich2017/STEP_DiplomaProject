@{
    Layout = "~/Views/Shared/_LayoutAdminPanel.cshtml";
}

@using LibraryProject.ViewModels;
@model ApplicationContext;
@addTagHelper *, LibraryProject;

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Выдачи книг</title>
    <link href="~/css/styleAdminCatalog.css" rel="stylesheet" />
    <link href="~/css/toast.css" rel="stylesheet" />
    <style>

                .btnNode {
                    width: 100%;
                    height: 100%;
                    border: none;
                    cursor: pointer;
                    outline: none;
                    margin: 0;
                }

                .tdNodeStatus {
                    position: relative;
                }

                .blockNodeTrue {
                    background-color: darkseagreen;
                }

                .blockNodeFalse {
                    background-color: #d88080;
                }

                .stateTrue {
                    cursor: not-allowed;
                }

                /*.blockNodeFalse,
                .blockNodeTrue{
                    position: absolute;
                    height: 100%;
                    width: 100%;
                    margin: 0;
                    top: 0;
                    left: 0;
                    text-align: center;
                    line-height: 37px;
                    color: ghostwhite;
                }
        */
    </style>
</head>
<body>
    <div class="titleTable">
        <h1 style="margin-left: 15px; color: #333;">Выдачи книг</h1>
    </div>
    @*<div class="block_toolsPanel" style="width: 150px;">
            <button style="width: 100%; border:none; text-align: left; padding-left: 15px; border-radius: 0.5em" id="toolPanel_Add"><b>Добавить</b><img src="~/images/add-list.svg" /></button>
        </div>*@

    <div class="block_table" style=" max-height: 500px; overflow: auto;">
        <table>
            <thead>
                <tr>
                    <th>Id</th>
                    <th style="max-width: 150px;">Название книги</th>
                    <th style="max-width: 150px;">Кем выдана</th>
                    <th style="max-width: 150px;">Кому выдана</th>
                    <th style="max-width: 150px;">Дата выдачи</th>
                    <th style="max-width: 150px;">Ожидаемая дата возвр.</th>
                    <th style="max-width: 150px;">Фактическая дата возвр.</th>
                    <th style="max-width: 150px;">Статус</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var node in Model.LendingBooks.ToList()) {
                    // получим библиотекаря выдавшего книгу, для формирования его фамилии и инициалов
                    Librarians librarian = Model.Librarians.Select(o => o).Where(l => l.Id == node.IdLibrarian).ToList()[0];
                    string librarianSurnameNP = librarian.SurnameLibrarian + " " + librarian.NameLibrarian.Substring(0, 1) + ". " + librarian.PatronymicLibrarian.Substring(0, 1) + ".";

                    // получим библиотекаря забравшего книгу, для формирования его фамилии и инициалов
                    Readers reader = Model.Readers.Select(o => o).Where(r => r.Id == node.IdReader).ToList()[0];
                    string readerSurnameNP = reader.SurnameReader + " " + reader.NameReader.Substring(0, 1) + ". " + reader.PatronymicReader.Substring(0, 1) + ".";

                    // получим название книги
                    int idLendBook = (int)Model.Copies.Select(o => o).Where(b => b.IdCopy == node.IdCopy).ToList()[0].IdBook;
                    string titleLendBook = Model.Books.Find(idLendBook).Title;

                    <tr id="@node.Id">
                        <td>@node.Id</td>
                        <td>@titleLendBook</td>
                        <td>@librarianSurnameNP</td>
                        <td class="reader">@readerSurnameNP</td>
                        <td>@node.DateOfIssue.Date.ToString("dd.MM.yyyy")</td>
                        <td>@node.ExpectedDateOfReturn.Date.ToString("dd.MM.yyyy")</td>
                        <td>@node.ActualReturnDate?.Date.ToString("dd.MM.yyyy")</td>


                        <td style="position: relative; padding: 0;" class="tdNodeStatus" id="lend">
                            @if (node.StatusNode != false) {
                                <button class="btnNode blockNodeTrue stateTrue">
                                    Вернул
                                </button>
                            }
                            else {
                                <button class="btnNode btnLend blockNodeFalse">
                                    Не вернул
                                </button>
                            }
                        </td>


                    </tr>
                }
            </tbody>

        </table>
    </div>
    <page-link page-model="Model.PageViewModel" page-action="AdminLendingBooks"></page-link>
    <script src="~/js/jquery-3.5.1.min.js"></script>
    <script src="~/js/toast.js"></script>
    <script>



        $(document).ready(function () {

            let btnLend = document.querySelectorAll("#lend");
            btnLend.forEach(function (lend) {
                lend.addEventListener("click", function (e) {
                    let formData = new FormData();
                    formData.append("id", e.currentTarget.parentNode.id);

                    if ($(e.target).hasClass("stateTrue")) {

                        return;
                    }

                    $.ajax({
                        url: "/Admin/AdminLendingBooks",
                        dataType: 'script',
                        cache: false,
                        contentType: false,
                        processData: false,
                        data: formData,
                        type: 'post'
                    });

                    Toast.add({
                        text: 'Запись успешно обновлена!',
                        color: '#28a745',
                        autohide: true,
                        delay: 5000
                    });

                    location.reload();
                });
            });

            $(".btnLend").on("mouseover", function (e) {
                e.target.innerText = 'Вернул';
                e.target.classList.remove("blockNodeFalse");
                e.target.classList.add("blockNodeTrue");
            });

            $(".btnLend").on("mouseout ", function (e) {
                e.target.innerText = "Не вернул";
                e.target.classList.remove("blockNodeTrue");
                e.target.classList.add("blockNodeFalse");
            });
        });
    </script>
</body>
</html>